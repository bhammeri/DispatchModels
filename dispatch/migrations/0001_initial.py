# Generated by Django 2.2.5 on 2019-09-17 08:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ThermalPlant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.FloatField(verbose_name='Capacity [MW]')),
                ('efficiency', models.FloatField(verbose_name='Efficiency [0-1]')),
                ('MIN_prod_fraction', models.FloatField(verbose_name='Minimal production fraction [0-1]')),
                ('SEL_prod_fraction', models.FloatField(verbose_name='Stable Export Limit production fraction [0-1]')),
                ('MEL_prod_fraction', models.FloatField(verbose_name='Maximal Export Limit production fraction [0-1]')),
                ('ramping_rate_BSE', models.FloatField(verbose_name='Ramping Rate BSE')),
                ('ramping_rate_RMP', models.FloatField(verbose_name='Ramping Rate RMP')),
                ('ramping_rate_NRM', models.FloatField(verbose_name='Ramping Rate NRM')),
                ('ramping_costs_BSE', models.FloatField(verbose_name='Ramping Costs BSE [0-1]')),
                ('ramping_costs_RMP', models.FloatField(verbose_name='Ramping Costs RMP [0-1]')),
                ('ramping_costs_NRM', models.FloatField(verbose_name='Ramping Costs NRM [0-1]')),
                ('depreciation', models.FloatField(verbose_name='???')),
                ('shutdown_costs', models.FloatField(verbose_name='Costs of Shutdown [EUR/MW]')),
                ('hot_start_costs', models.FloatField(verbose_name='Costs of Hot Start [EUR/MW]')),
                ('warm_start_costs', models.FloatField(verbose_name='Costs of Warm Start [EUR/MW]')),
                ('cold_start_costs', models.FloatField(verbose_name='Costs of Cold Start [EUR/MW]')),
                ('hot_start_within_timedelta', models.FloatField(verbose_name='Start counts as hot start if happening within X hours.')),
                ('warm_start_within_timedelta', models.FloatField(verbose_name='Start counts as warm start if happening within X hours.')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TimeSeriesIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_type', models.IntegerField(choices=[(1, 'integer index'), (2, 'datetime index')], default=1)),
                ('datetime_start', models.DateTimeField(null=True)),
                ('datetime_interval', models.DurationField(null=True)),
                ('integer_offset', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TimeSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField(default='')),
                ('data', models.BinaryField(default=b'')),
                ('length', models.IntegerField(default=0)),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='date published')),
                ('last_altered', models.DateTimeField(auto_now=True, verbose_name='date altered')),
                ('public', models.BooleanField(default=False)),
                ('index', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dispatch.TimeSeriesIndex')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ThermalPlantDispatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(default=0)),
                ('clean_fuel_price', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dispatch_clean_fuel_price_set', to='dispatch.TimeSeries')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dispatch.ThermalPlant')),
                ('time_series_index', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dispatch.TimeSeriesIndex')),
                ('wholesale_price', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dispatch_wholesale_price_set', to='dispatch.TimeSeries')),
            ],
        ),
    ]
